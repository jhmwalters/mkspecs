# qmake configuration for the Raspberry Pi 2

include(../common/linux_device_pre.conf)

VC_LIBRARY_PATH=$$[QT_SYSROOT]/opt/vc/lib
LIBRARY_PATH=$$[QT_SYSROOT]/lib

QMAKE_LFLAGS           += -L$${VC_LIBRARY_PATH} -Wl,-rpath-link,$${VC_LIBRARY_PATH} -Wl,-rpath-link,$${LIBRARY_PATH}

QMAKE_LIBDIR_OPENGL_ES2 = $${VC_LIBRARY_PATH}
QMAKE_LIBDIR_EGL        = $$QMAKE_LIBDIR_OPENGL_ES2
QMAKE_LIBDIR_OPENVG     = $$QMAKE_LIBDIR_OPENGL_ES2

QMAKE_INCDIR_EGL        = $$[QT_SYSROOT]/opt/vc/include \
                          $$[QT_SYSROOT]/opt/vc/include/interface/vcos/pthreads \
                          $$[QT_SYSROOT]/opt/vc/include/interface/vmcs_host/linux
QMAKE_INCDIR_OPENGL_ES2 = $${QMAKE_INCDIR_EGL}
QMAKE_INCDIR_OPENVG     = $${QMAKE_INCDIR_EGL}

#  NEEDED               libbcm_host.so
#  NEEDED               libvchiq_arm.so
#  NEEDED               libvcos.so

# The official opt vc EGL references GLESv2 symbols: need to link it
# this VC_LIBRARY_PATH is probably unnecessary now
QMAKE_LIBS_EGL          = -L$${VC_LIBRARY_PATH} -lEGL -lGLESv2 -lbcm_host -lvchiq_arm -lvcos
QMAKE_LIBS_OPENVG       = -lEGL -lOpenVG -lGLESv2

# We deliberately override the existing Qt CFLAGS as they might be problematic
QMAKE_CFLAGS            = -march=armv8-a+crc -mtune=cortex-a53 -mfpu=crypto-neon-fp-armv8 -pipe -Os -flto -mthumb
QMAKE_CXXFLAGS          = $$QMAKE_CFLAGS -std=c++1z

DISTRO_OPTS += hard-float
DISTRO_OPTS += deb-multi-arch

EGLFS_DEVICE_INTEGRATION = eglfs_brcm

include(../common/linux_arm_device_post.conf)

load(qt_config)
